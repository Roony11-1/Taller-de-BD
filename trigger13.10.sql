CREATE TABLE EMPLEADOS AS SELECT * FROM EMPLOYEES;

CREATE OR REPLACE TRIGGER TRG_SEGURIDAD_EMP
BEFORE INSERT ON EMPLEADOS
BEGIN
    IF (TO_CHAR(SYSDATE, 'HH24:MI') NOT BETWEEN '08:00' AND '09:00') THEN
        RAISE_APPLICATION_ERROR(-20500, 'NO ESTAI TRABAJANDO WEA');
    END IF;
END;

INSERT INTO EMPLEADOS(employee_id, last_name, first_name, email, hire_date, job_id, salary, department_id) VALUES(1, 'hpÃ±a', 'akaka', 'asdad', sysdate, 1, 1000, 100);

----- trigger de sentencia

CREATE OR REPLACE TRIGGER TRG_VALIDA_DML_EMP
BEFORE INSERT OR UPDATE OR DELETE ON EMPLEADOS
DECLARE
    V_CODIGOTRANSACCION NUMBER;
    V_TRANSACCION VARCHAR2(100);
BEGIN
    IF (TO_CHAR(SYSDATE, 'HH24:MI') NOT BETWEEN '08:00' AND '09:00') THEN
        IF DELETING THEN
            V_CODIGOTRANSACCION := -20502;
            V_TRANSACCION := 'eliminar';
        ELSIF INSERTING THEN
            V_CODIGOTRANSACCION := -20500;
            V_TRANSACCION := 'insertar';
        ELSIF UPDATING THEN
            V_CODIGOTRANSACCION := -20503;
            V_TRANSACCION := 'actualizar';
        END IF;
        RAISE_APPLICATION_ERROR(V_CODIGOTRANSACCION, 'No puedes '||V_TRANSACCION||' registros fuera de horario laboral');
    END IF;
END;

ALTER TRIGGER TRG_SEGURIDAD_EMP DISABLE; -- desactivamos

UPDATE EMPLEADOS
SET SALARY = 999;

-- A NIVEL DE FILA

CREATE TABLE PRESTAMO_SOCIAL(
    NRO_PRESTAMO NUMBER PRIMARY KEY,
    ID_EMPLEADO NUMBER,
    VALOR_PRESTAMO NUMBER,
    FECHA_PRESTAMO DATE,
    FECHA_VENC_PRESTAMO DATE,
    FECHA_PAGO DATE,
    MULTA NUMBER,
    ESTADO_PAGO VARCHAR2(200));
    
CREATE SEQUENCE SEQ1;
    
INSERT INTO PRESTAMO_SOCIAL(NRO_PRESTAMO, ID_EMPLEADO, VALOR_PRESTAMO, FECHA_PRESTAMO, FECHA_VENC_PRESTAMO)
    SELECT
        SEQ1.NEXTVAL,
        EMPLOYEE_ID,
        ROUND(SALARY/2),
        SYSDATE,
        SYSDATE+60
    FROM EMPLOYEES
    WHERE DEPARTMENT_ID = 50;
    
CREATE OR REPLACE TRIGGER TRG_PRESTAMO_SOCIAL
BEFORE UPDATE OF FECHA_PAGO ON PRESTAMO_SOCIAL
FOR EACH ROW
BEGIN
    IF :NEW.FECHA_PAGO>:NEW.FECHA_VENC_PRESTAMO THEN
        :NEW.MULTA:=ROUND(:NEW.MULTA*((:NEW.FECHA_PAGO - :NEW.FECHA_VENC_PRESTAMO)/100 + 1));
        :NEW.ESTADO_PAGO:='El valor de la multa corresponde a: '||(TO_DATE(TO_CHAR(:NEW.FECHA_PAGO, 'DD/MM/YYYY'))-TO_DATE(:NEW.FECHA_VENC_PRESTAMO, 'DD/MM/YYYY'))||' dias de atraso';
    END IF;
END;

UPDATE PRESTAMO_SOCIAL
SET FECHA_PAGO = ADD_MONTHS(FECHA_PRESTAMO, 1)
WHERE NRO_PRESTAMO IN(1, 2);

UPDATE PRESTAMO_SOCIAL
SET FECHA_PAGO = ADD_MONTHS(FECHA_PRESTAMO, 1)+1
WHERE NRO_PRESTAMO IN (3, 4);